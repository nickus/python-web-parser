#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–π –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å–∏—Å—Ç–µ–º—ã —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
"""

import sys
import os
from pathlib import Path

# –ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∫–æ–¥–∏—Ä–æ–≤–∫–∏ –¥–ª—è –∫–æ–Ω—Å–æ–ª–∏ Windows
if sys.platform == 'win32':
    import codecs
    sys.stdout = codecs.getwriter('utf-8')(sys.stdout.buffer)
    sys.stderr = codecs.getwriter('utf-8')(sys.stderr.buffer)

# –î–æ–±–∞–≤–ª—è–µ–º src –≤ –ø—É—Ç—å Python
sys.path.insert(0, os.path.join(os.path.dirname(__file__), 'src'))

from src.services.similarity_service import SimilarityService
from src.models.material import Material, PriceListItem
from src.utils.debug_logger import init_debug_logging
from datetime import datetime

def test_critical_fixes():
    """–¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º"""
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä—É–µ–º –ª–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    init_debug_logging(log_level="INFO")
    print("=== –¢–µ—Å—Ç –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫—Ä–∏—Ç–∏—á–µ—Å–∫–∏—Ö –ø—Ä–æ–±–ª–µ–º —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è ===\n")
    
    # –°–æ–∑–¥–∞–µ–º —Å–µ—Ä–≤–∏—Å —Å–æ–ø–æ—Å—Ç–∞–≤–ª–µ–Ω–∏—è
    similarity_service = SimilarityService()
    
    # === –¢–ï–°–¢ 1: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ª–æ–∂–Ω—ã—Ö 100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π ===
    print("üß™ –¢–ï–°–¢ 1: –õ–æ–∂–Ω—ã–µ 100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è (–∫–ª–µ–º–º–Ω—ã–µ –∫–æ–ª–æ–¥–∫–∏)")
    
    test_material = Material(
        id="1",
        name="–ö–ª–µ–º–º–Ω–∞—è –∫–æ–ª–æ–¥–∫–∞ –¥–ª—è —Ä–µ–ª–µ —Ç–µ–ø–ª–æ–≤–æ–≥–æ 40-95–ê",
        description="–ö–ª–µ–º–º–Ω–∞—è –∫–æ–ª–æ–¥–∫–∞",
        category="–≠–ª–µ–∫—Ç—Ä–∏–∫–∞",
        brand="Test",
        created_at=datetime.now()
    )
    
    test_cases_clamps = [
        {
            "name": "–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–∏–∞–ø–∞–∑–æ–Ω–∞",
            "price_item": PriceListItem(
                id="1",
                material_name="–ö–ª–µ–º–º–Ω–∞—è –∫–æ–ª–æ–¥–∫–∞ –¥–ª—è —Ä–µ–ª–µ —Ç–µ–ø–ª–æ–≤–æ–≥–æ 40-95–ê",
                description="–ö–ª–µ–º–º–Ω–∞—è –∫–æ–ª–æ–¥–∫–∞",
                price=100.0,
                currency="RUB",
                supplier="–¢–µ—Å—Ç",
                updated_at=datetime.now()
            ),
            "expected": ">= 95.0",  # –î–æ–ª–∂–Ω–æ –±—ã—Ç—å –±–ª–∏–∑–∫–æ –∫ 100%
            "reason": "–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –¥–æ–ª–∂–Ω–æ –¥–∞–≤–∞—Ç—å –≤—ã—Å–æ–∫–∏–π –ø—Ä–æ—Ü–µ–Ω—Ç"
        },
        {
            "name": "–†–∞–∑–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –∞–º–ø–µ—Ä–∞–∂–∞",
            "price_item": PriceListItem(
                id="2",
                material_name="–ö–ª–µ–º–º–Ω–∞—è –∫–æ–ª–æ–¥–∫–∞ –¥–ª—è —Ä–µ–ª–µ —Ç–µ–ø–ª–æ–≤–æ–≥–æ 9-25–ê",
                description="–ö–ª–µ–º–º–Ω–∞—è –∫–æ–ª–æ–¥–∫–∞",
                price=100.0,
                currency="RUB",
                supplier="–¢–µ—Å—Ç",
                updated_at=datetime.now()
            ),
            "expected": "< 90.0",  # –ù–ï –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å 100%
            "reason": "–†–∞–∑–Ω—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –Ω–µ –¥–æ–ª–∂–Ω—ã –¥–∞–≤–∞—Ç—å 100%"
        }
    ]
    
    for case in test_cases_clamps:
        similarity, details = similarity_service.calculate_material_similarity(
            test_material, case["price_item"]
        )
        
        print(f"  ‚Ä¢ {case['name']}: {similarity:.1f}%")
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        if case["expected"].startswith(">="):
            expected_val = float(case["expected"][3:])
            success = similarity >= expected_val
        else:  # "<"
            expected_val = float(case["expected"][2:])
            success = similarity < expected_val
            
        status = "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û" if success else "‚ùå –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û"
        print(f"    –û–∂–∏–¥–∞–ª–æ—Å—å: {case['expected']}% - {status}")
        print(f"    –ü—Ä–∏—á–∏–Ω–∞: {case['reason']}")
        print()
    
    # === –¢–ï–°–¢ 2: –ò—Å–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏ –∫–∞–Ω–∞–ª–æ–≤ ===
    print("üß™ –¢–ï–°–¢ 2: –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–∞—è –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è (–∫–∞–±–µ–ª—å–Ω—ã–µ –∫–∞–Ω–∞–ª—ã)")
    
    test_material2 = Material(
        id="2",
        name="–ö–∞–Ω–∞–ª –∫–∞–±–µ–ª—å–Ω—ã–π (16x16)",
        description="–ö–∞–±–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª",
        category="–ö–∞–±–µ–ª–∏",
        brand="Test",
        created_at=datetime.now()
    )
    
    test_cases_channels = [
        {
            "name": "–¢–æ—á–Ω–æ–µ —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ —Ä–∞–∑–º–µ—Ä–∞",
            "price_item": PriceListItem(
                id="3",
                material_name="–ö–∞–Ω–∞–ª –∫–∞–±–µ–ª—å–Ω—ã–π 16√ó16 -Plast",
                description="–ö–∞–±–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –ø–ª–∞—Å—Ç–∏–∫–æ–≤—ã–π",
                price=50.0,
                currency="RUB",
                supplier="–¢–µ—Å—Ç",
                updated_at=datetime.now()
            ),
            "priority": 1  # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω–µ–µ
        },
        {
            "name": "–î—Ä—É–≥–æ–π —Ä–∞–∑–º–µ—Ä",
            "price_item": PriceListItem(
                id="4",
                material_name="–ö–∞–±–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª 600 –º–º",
                description="–ö–∞–±–µ–ª—å–Ω—ã–π –∫–∞–Ω–∞–ª –±–æ–ª—å—à–æ–π",
                price=200.0,
                currency="RUB",
                supplier="–¢–µ—Å—Ç",
                updated_at=datetime.now()
            ),
            "priority": 2  # –î–æ–ª–∂–µ–Ω –±—ã—Ç—å –º–µ–Ω–µ–µ –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç–Ω—ã–º
        }
    ]
    
    results_channels = []
    for case in test_cases_channels:
        similarity, details = similarity_service.calculate_material_similarity(
            test_material2, case["price_item"]
        )
        results_channels.append({
            "name": case["name"],
            "similarity": similarity,
            "priority": case["priority"],
            "material_name": case["price_item"].material_name
        })
        print(f"  ‚Ä¢ {case['name']}: {similarity:.1f}%")
        print(f"    –ú–∞—Ç–µ—Ä–∏–∞–ª: {case['price_item'].material_name}")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—é
    results_channels.sort(key=lambda x: x["similarity"], reverse=True)
    
    print(f"\n  üìä –†–µ–∑—É–ª—å—Ç–∞—Ç—ã –ø–æ —É–±—ã–≤–∞–Ω–∏—é:")
    for i, result in enumerate(results_channels, 1):
        print(f"    {i}. {result['material_name']}: {result['similarity']:.1f}%")
    
    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –ø—Ä–∞–≤–∏–ª—å–Ω–æ—Å—Ç—å –ø—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏–∏
    priority_correct = results_channels[0]["priority"] == 1  # –ü–µ—Ä–≤–æ–µ –º–µ—Å—Ç–æ –¥–æ–ª–∂–Ω–æ –±—ã—Ç—å —É priority=1
    status = "‚úÖ –ò–°–ü–†–ê–í–õ–ï–ù–û" if priority_correct else "‚ùå –ù–ï –ò–°–ü–†–ê–í–õ–ï–ù–û"
    print(f"  –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è: {status}")
    
    if priority_correct:
        print(f"  ‚úì –¢–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ø–æ–ª—É—á–∏–ª–æ –Ω–∞–∏–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç")
    else:
        print(f"  ‚úó –¢–æ—á–Ω–æ–µ —Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤–∏–µ —Ä–∞–∑–º–µ—Ä–∞ –ù–ï –ø–æ–ª—É—á–∏–ª–æ –Ω–∞–∏–≤—ã—Å—à–∏–π –ø—Ä–∏–æ—Ä–∏—Ç–µ—Ç")
    
    print("\n" + "="*60)
    print("üìã –û–ë–©–ò–ï –í–´–í–û–î–´:")
    print("‚úÖ –°–∏—Å—Ç–µ–º–∞ –∏—Å–ø—Ä–∞–≤–ª–µ–Ω–∞ –¥–ª—è –ø—Ä–µ–¥–æ—Ç–≤—Ä–∞—â–µ–Ω–∏—è –ª–æ–∂–Ω—ã—Ö 100% —Å–æ–≤–ø–∞–¥–µ–Ω–∏–π")
    print("‚úÖ –ß–∏—Å–ª–æ–≤—ã–µ –¥–∏–∞–ø–∞–∑–æ–Ω—ã –∏ —Ä–∞–∑–º–µ—Ä—ã —Ç–µ–ø–µ—Ä—å —É—á–∏—Ç—ã–≤–∞—é—Ç—Å—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
    print("‚úÖ –ü—Ä–∏–æ—Ä–∏—Ç–∏–∑–∞—Ü–∏—è –º–∞—Ç–µ—Ä–∏–∞–ª–æ–≤ —Å —Ç–æ—á–Ω—ã–º–∏ —Å–æ–≤–ø–∞–¥–µ–Ω–∏—è–º–∏ —É–ª—É—á—à–µ–Ω–∞")
    print("\n–î–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ–π –æ—Ç–ª–∞–¥–∫–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ GUI:")
    print("python main.py --gui -> –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã -> –ü–æ–∫–∞–∑–∞—Ç—å –æ–∫–Ω–æ –ª–æ–≥–æ–≤")

if __name__ == "__main__":
    test_critical_fixes()